


        //trabalhando com a classe desccargo

        DescCargo cargo1 = new desccargo(1, "oficial");  
        //cargo1.idDesc = 1;
        //cargo1.descricao = "Oficial";
                       
        //usando o metodo dentro da class usuário
        cargo1.novoRegistro();

        
        //-fim do uso e  instanciamento da classe usuário --




                // Criando uma instância de Pedidos
                Pedidos pedido = new Pedidos(1, "2025-04-01", "2025-04-01", 10, "12345", 2500.50, 5);
        
                // Exibindo os detalhes do pedido
                System.out.println("Exibindo o pedido:");
                pedido.exibir();
        
                // Modificando o pedido
                System.out.println("\nModificando o pedido...");
                pedido.modificar(2, "2025-05-02", "2025-05-01", 20, "54321", 3000.75, 10);
        
                // Exibindo os detalhes do pedido modificado
                System.out.println("\nExibindo o pedido modificado:");
                pedido.exibir();
        
                // Apagando o pedido
                System.out.println("\nApagando o pedido...");
                pedido.apagar();
        
                // Tentando exibir o pedido apagado
                System.out.println("\nExibindo o pedido apagado:");
                pedido.exibir();
            }


// Criando uma instância de Pagtos
Pagtos pagamento = new Pagtos(1, "2025-04-02", "2025-04-01", 101, 1500.75, 10);

// Exibindo os detalhes do pagamento
System.out.println("Exibindo o pagamento:");
pagamento.exibir();

// Modificando o pagamento
System.out.println("\nModificando o pagamento...");
pagamento.modificar(2, "2025-04-03", "2025-04-02", 102, 2000.50, 11);

// Exibindo os detalhes do pagamento modificado
System.out.println("\nExibindo o pagamento modificado:");
pagamento.exibir();

// Apagando o pagamento
System.out.println("\nApagando o pagamento...");
pagamento.apagar();

// Tentando exibir o pagamento apagado
System.out.println("\nExibindo o pagamento apagado:");
pagamento.exibir();


}
        





        // trabalhando com os metodos e atributos da classe cargo descrição
        
        // Criando ojbeto tipo cargo
        // DescCargo cargo1 = new DescCargo(1, "auxiliar");
        // cargo1.cargocriar();

        // Modificando o cargo
        // cargo1.cargomodificar(1, "escrevente");

        // Exibindo as informações do cargo
        //cargo.cargoexibir();

        // Apagando o cargo
        // cargo.cargoapagar();
    }


    public class DescCargo {
    
        // criação do objeto cargo (modelo do objeto  / forma do objeto)
    
        // tipo da variavel string texto, numero > int ex 1000 1 100 ,  float  decimal 00.00 preço,  date bolean 
        // double _> decimal exemplos qtd de casa decimal pi 3.142224616564615651
        
        // atributos - é a criação das caracteristicas do objeto - instancia
            //controle de acesso - public; private; protected;
            //public = acesso de qualquer classe
            //private = somente a classe que é dona daquele atributo ou método tem acesso
            //protected = completar
        
        // criação dos atributos da classe usuário
           private String idcargo;
           private String cargodesc;
           
        // metodo construtor de inicialização dos atributos
        public Cargo(String idCargo, String cargoDesc) {
            this.idCargo = idCargo;
            this.cargoDesc = cargoDesc;
        }
    
        // setters and getters - esses metodos sao usados para encapsular e interagir
        // com os atributos da classe
      
       // 0 atributo cargo
     
        public String getidCargo() {
            return idCargo;
        }
        
        public void setidCargo(String idCargo) {
            this.idCargo = idCargo;
        }
    
        
    
        // 1 proximo atributo cargodescricao
    
        public String getcargoDesc() {
            return cargoDesc;
        }
    
        public void setcargoDesc(String cargoDesc) {
            this.cargoDesc = cargoDesc;
        }
    
    
    
     /// -----------------------------------------------
    
        // Método para criar o cargo 
        public void cargocriar() {
            System.out.println("Cargo criado: ID = " + idCargo + ", Descrição = " + cargoDesc);
        }
    
        // Método para modificar o cargo
        public void cargomodificar(int novoIdCargo, String novacargoDesc) {
            this.idCargo = novoIdCargo;
            this.cargoDesc = novacargoDesc;
            System.out.println("Cargo modificado: ID = " + idCargo + ", Nova descrição = " + cargoDesc);
        }
    
        // Método para apagar o cargo
        public void cargoapagar() {
            this.idCargo = 0;
            this.cargoDesc = null;
            System.out.println("Cargo apagado.");
        }
    
        // Método para exibir o cargo
        public void cargoexibir() {
            System.out.println("Cargo: ID = " + idCargo + ", Descrição = " + cargoDesc);
        }
    
    }


    public class Tipopagto {
    
        // criação do objeto tipopagto (modelo do objeto  / forma do objeto)
    
        // tipo da variavel string texto, numero > int ex 1000 1 100 ,  float  decimal 00.00 preço,  date bolean 
        // double _> decimal exemplos qtd de casa decimal pi 3.142224616564615651
        
        // atributos - é a criação das caracteristicas do objeto - instancia
            //controle de acesso - public; private; protected;
            //public = acesso de qualquer classe
            //private = somente a classe que é dona daquele atributo ou método tem acesso
            //protected = completar
        
        // criação dos atributos da classe usuário
           private String idtipopagto;
           private String tipopagtodesc;
           
        // metodo construtor de inicialização dos atributos
        public Tipopagto(String idtipopagto, String tipopagtoDesc) {
            this.idtipopagto = idtipopagto;
            this.tipopagtoDesc = tipopagtoDesc;
        }
    
        // setters and getters - esses metodos sao usados para encapsular e interagir
        // com os atributos da classe
      
        // 0 atributo tipopagto
     
        public String getidtipopagto() {
            return idtipopagto;
        }
        
        public void setidtipopagto(String idtipopagto) {
            this.idtipopagto = idtipopagto;
        }
    
        
    
        // 1 proximo atributo tipopagtodescricao
    
        public String gettipopagtoDesc() {
            return tipopagtoDesc;
        }
    
        public void settipopagtoDesc(String tipopagtoDesc) {
            this.tipopagtoDesc = tipopagtoDesc;
        }
    
    
    
     /// -----------------------------------------------
    
        // Método para criar o tipopagto 
        public void tipopagtocriar() {
            System.out.println("tipopagto criado: ID = " + idtipopagto + ", Descrição = " + tipopagtoDesc);
        }
    
        // Método para modificar o tipopagto
        public void tipopagtomodificar(int novoIdtipopagto, String novatipopagtoDesc) {
            this.idtipopagto = novoIdtipopagto;
            this.tipopagtoDesc = novatipopagtoDesc;
            System.out.println("tipopagto modificado: ID = " + idtipopagto + ", Nova descrição = " + tipopagtoDesc);
        }
    
        // Método para apagar o tipopagto
        public void tipopagtoapagar() {
            this.idtipopagto = 0;
            this.tipopagtoDesc = null;
            System.out.println("tipopagto apagado.");
        }
    
        // Método para exibir o tipopagto
        public void tipopagtoexibir() {
            System.out.println("tipopagto: ID = " + idtipopagto + ", Descrição = " + tipopagtoDesc);
        }
    
    }